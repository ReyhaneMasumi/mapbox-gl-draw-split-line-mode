(this.webpackJsonpdemo=this.webpackJsonpdemo||[]).push([[0],{24:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(0);function i(t,e,r,n,i){o(t,e,r||0,n||t.length-1,i||s)}function o(t,e,r,n,i){for(;n>r;){if(n-r>600){var s=n-r+1,u=e-r+1,l=Math.log(s),c=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*c*(s-c)/s)*(u-s/2<0?-1:1);o(t,e,Math.max(r,Math.floor(e-u*c/s+h)),Math.min(n,Math.floor(e+(s-u)*c/s+h)),i)}var f=t[e],m=r,d=n;for(a(t,r,e),i(t[n],f)>0&&a(t,r,n);m<d;){for(a(t,m,d),m++,d--;i(t[m],f)<0;)m++;for(;i(t[d],f)>0;)d--}0===i(t[r],f)?a(t,r,d):a(t,++d,n),d<=e&&(r=d+1),e<=d&&(n=d-1)}}function a(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function s(t,e){return t<e?-1:t>e?1:0}function u(t,e){if(!(this instanceof u))return new u(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function l(t,e,r){if(!r)return e.indexOf(t);for(var n=0;n<e.length;n++)if(r(t,e[n]))return n;return-1}function c(t,e){h(t,0,t.children.length,e,t)}function h(t,e,r,n,i){i||(i=b(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,a=e;a<r;a++)o=t.children[a],f(i,t.leaf?n(o):o);return i}function f(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function m(t,e){return t.minX-e.minX}function d(t,e){return t.minY-e.minY}function p(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function g(t){return t.maxX-t.minX+(t.maxY-t.minY)}function y(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function w(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function b(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function v(t,e,r,n,o){for(var a,s=[e,r];s.length;)(r=s.pop())-(e=s.pop())<=n||(i(t,a=e+Math.ceil((r-e)/n/2)*n,e,r,o),s.push(e,a,a,r))}u.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,r=[],n=this.toBBox;if(!w(t,e))return r;for(var i,o,a,s,u=[];e;){for(i=0,o=e.children.length;i<o;i++)a=e.children[i],w(t,s=e.leaf?n(a):a)&&(e.leaf?r.push(a):y(t,s)?this._all(a,r):u.push(a));e=u.pop()}return r},collides:function(t){var e=this.data,r=this.toBBox;if(!w(t,e))return!1;for(var n,i,o,a,s=[];e;){for(n=0,i=e.children.length;n<i;n++)if(o=e.children[n],w(t,a=e.leaf?r(o):o)){if(e.leaf||y(t,a))return!0;s.push(o)}e=s.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,r=t.length;e<r;e++)this.insert(t[e]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var i=this.data;this.data=n,n=i}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=b([]),this},remove:function(t,e){if(!t)return this;for(var r,n,i,o,a=this.data,s=this.toBBox(t),u=[],c=[];a||u.length;){if(a||(a=u.pop(),n=u[u.length-1],r=c.pop(),o=!0),a.leaf&&-1!==(i=l(t,a.children,e)))return a.children.splice(i,1),u.push(a),this._condense(u),this;o||a.leaf||!y(a,s)?n?(r++,a=n.children[r],o=!1):a=null:(u.push(a),c.push(r),r=0,n=a,a=a.children[0])}return this},toBBox:function(t){return t},compareMinX:m,compareMinY:d,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var r=[];t;)t.leaf?e.push.apply(e,t.children):r.push.apply(r,t.children),t=r.pop();return e},_build:function(t,e,r,n){var i,o=r-e+1,a=this._maxEntries;if(o<=a)return c(i=b(t.slice(e,r+1)),this.toBBox),i;n||(n=Math.ceil(Math.log(o)/Math.log(a)),a=Math.ceil(o/Math.pow(a,n-1))),(i=b([])).leaf=!1,i.height=n;var s,u,l,h,f=Math.ceil(o/a),m=f*Math.ceil(Math.sqrt(a));for(v(t,e,r,m,this.compareMinX),s=e;s<=r;s+=m)for(v(t,s,l=Math.min(s+m-1,r),f,this.compareMinY),u=s;u<=l;u+=f)h=Math.min(u+f-1,l),i.children.push(this._build(t,u,h,n-1));return c(i,this.toBBox),i},_chooseSubtree:function(t,e,r,n){for(var i,o,a,s,u,l,c,h,f,m;n.push(e),!e.leaf&&n.length-1!==r;){for(c=h=1/0,i=0,o=e.children.length;i<o;i++)u=p(a=e.children[i]),f=t,m=a,(l=(Math.max(m.maxX,f.maxX)-Math.min(m.minX,f.minX))*(Math.max(m.maxY,f.maxY)-Math.min(m.minY,f.minY))-u)<h?(h=l,c=u<c?u:c,s=a):l===h&&u<c&&(c=u,s=a);e=s||e.children[0]}return e},_insert:function(t,e,r){var n=this.toBBox,i=r?t:n(t),o=[],a=this._chooseSubtree(i,this.data,e,o);for(a.children.push(t),f(a,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var r=t[e],n=r.children.length,i=this._minEntries;this._chooseSplitAxis(r,i,n);var o=this._chooseSplitIndex(r,i,n),a=b(r.children.splice(o,r.children.length-o));a.height=r.height,a.leaf=r.leaf,c(r,this.toBBox),c(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(r,a)},_splitRoot:function(t,e){this.data=b([t,e]),this.data.height=t.height+1,this.data.leaf=!1,c(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,r){var n,i,o,a,s,u,l,c,f,m,d,g,y,w;for(u=l=1/0,n=e;n<=r-e;n++)f=i=h(t,0,n,this.toBBox),m=o=h(t,n,r,this.toBBox),void 0,void 0,void 0,void 0,d=Math.max(f.minX,m.minX),g=Math.max(f.minY,m.minY),y=Math.min(f.maxX,m.maxX),w=Math.min(f.maxY,m.maxY),a=Math.max(0,y-d)*Math.max(0,w-g),s=p(i)+p(o),a<u?(u=a,c=n,l=s<l?s:l):a===u&&s<l&&(l=s,c=n);return c},_chooseSplitAxis:function(t,e,r){var n=t.leaf?this.compareMinX:m,i=t.leaf?this.compareMinY:d;this._allDistMargin(t,e,r,n)<this._allDistMargin(t,e,r,i)&&t.children.sort(n)},_allDistMargin:function(t,e,r,n){t.children.sort(n);var i,o,a=this.toBBox,s=h(t,0,e,a),u=h(t,r-e,r,a),l=g(s)+g(u);for(i=e;i<r-e;i++)o=t.children[i],f(s,t.leaf?a(o):o),l+=g(s);for(i=r-e-1;i>=e;i--)o=t.children[i],f(u,t.leaf?a(o):o),l+=g(u);return l},_adjustParentBBoxes:function(t,e,r){for(var n=r;n>=0;n--)f(e[n],t)},_condense:function(t){for(var e,r=t.length-1;r>=0;r--)0===t[r].children.length?r>0?(e=t[r-1].children).splice(e.indexOf(t[r]),1):this.clear():c(t[r],this.toBBox)},_initFormat:function(t){var e=["return a"," - b",";"];this.compareMinX=new Function("a","b",e.join(t[0])),this.compareMinY=new Function("a","b",e.join(t[1])),this.toBBox=new Function("a","return {minX: a"+t[0]+", minY: a"+t[1]+", maxX: a"+t[2]+", maxY: a"+t[3]+"};")}};var M={meters:6371008.8,metres:6371008.8,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:6371008.8/1852,inches:6371008.8*39.37,yards:6371008.8/1.0936,feet:20902260.511392,radians:1,degrees:6371008.8/111325};function x(t,e,r){if(!B(r=r||{}))throw new Error("options is invalid");var n=r.bbox,i=r.id;if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");n&&L(n),i&&N(i);var o={type:"Feature"};return i&&(o.id=i),n&&(o.bbox=n),o.properties=e||{},o.geometry=t,o}function E(t,e,r){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!S(t[0])||!S(t[1]))throw new Error("coordinates must contain numbers");return x({type:"Point",coordinates:t},e,r)}function _(t,e,r){if(!t)throw new Error("coordinates is required");if(t.length<2)throw new Error("coordinates must be an array of two or more positions");if(!S(t[0][1])||!S(t[0][1]))throw new Error("coordinates must contain numbers");return x({type:"LineString",coordinates:t},e,r)}function j(t,e){if(!B(e=e||{}))throw new Error("options is invalid");var r=e.bbox,n=e.id;if(!t)throw new Error("No features passed");if(!Array.isArray(t))throw new Error("features must be an Array");r&&L(r),n&&N(n);var i={type:"FeatureCollection"};return n&&(i.id=n),r&&(i.bbox=r),i.features=t,i}function Y(t){if(null==t)throw new Error("radians is required");return t%(2*Math.PI)*180/Math.PI}function O(t){if(null==t)throw new Error("degrees is required");return t%360*Math.PI/180}function S(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function B(t){return!!t&&t.constructor===Object}function L(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!S(t))throw new Error("bbox must only contain numbers")}))}function N(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}function X(t,e,r){if(null!==t)for(var n,i,o,a,s,u,l,c,h=0,f=0,m=t.type,d="FeatureCollection"===m,p="Feature"===m,g=d?t.features.length:1,y=0;y<g;y++){s=(c=!!(l=d?t.features[y].geometry:p?t.geometry:t)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var w=0;w<s;w++){var b=0,v=0;if(null!==(a=c?l.geometries[w]:l)){u=a.coordinates;var M=a.type;switch(h=!r||"Polygon"!==M&&"MultiPolygon"!==M?0:1,M){case null:break;case"Point":e(u,f,y,b,v),f++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<u.length;n++)e(u[n],f,y,b,v),f++,"MultiPoint"===M&&b++;"LineString"===M&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<u.length;n++){for(i=0;i<u[n].length-h;i++)e(u[n][i],f,y,b,v),f++;"MultiLineString"===M&&b++,"Polygon"===M&&v++}"Polygon"===M&&b++;break;case"MultiPolygon":for(n=0;n<u.length;n++){for("MultiPolygon"===M&&(v=0),i=0;i<u[n].length;i++){for(o=0;o<u[n][i].length-h;o++)e(u[n][i][o],f,y,b,v),f++;v++}b++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)X(a.geometries[n],e,r);break;default:throw new Error("Unknown Geometry Type")}}}}}function P(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length;r++)e(t.features[r],r)}function k(t,e){!function(t,e){var r,n,i,o,a,s,u,l,c,h,f=0,m="FeatureCollection"===t.type,d="Feature"===t.type,p=m?t.features.length:1;for(r=0;r<p;r++){for(s=m?t.features[r].geometry:d?t.geometry:t,l=m?t.features[r].properties:d?t.properties:{},c=m?t.features[r].bbox:d?t.bbox:void 0,h=m?t.features[r].id:d?t.id:void 0,a=(u=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,i=0;i<a;i++)if(null!==(o=u?s.geometries[i]:s))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":e(o,f,l,c,h);break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)e(o.geometries[n],f,l,c,h);break;default:throw new Error("Unknown Geometry Type")}else e(null,f,l,c,h);f++}}(t,(function(t,r,n,i,o){var a,s=null===t?null:t.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return void e(x(t,n,{bbox:i,id:o}),r,0)}switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}t.coordinates.forEach((function(t,i){e(x({type:a,coordinates:t},n),r,i)}))}))}function C(t){var e=u(t);return e.insert=function(t){if(Array.isArray(t)){var e=t;(t=T(e)).bbox=e}else t.bbox=t.bbox?t.bbox:I(t);return u.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach((function(t){var r=T(t);r.bbox=t,e.push(r)})):P(t,(function(t){t.bbox=t.bbox?t.bbox:I(t),e.push(t)})),u.prototype.load.call(this,e)},e.remove=function(t){if(Array.isArray(t)){var e=t;(t=T(e)).bbox=e}return u.prototype.remove.call(this,t)},e.clear=function(){return u.prototype.clear.call(this)},e.search=function(t){return{type:"FeatureCollection",features:u.prototype.search.call(this,this.toBBox(t))}},e.collides=function(t){return u.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return{type:"FeatureCollection",features:u.prototype.all.call(this)}},e.toJSON=function(){return u.prototype.toJSON.call(this)},e.fromJSON=function(t){return u.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;return{minX:(e=t.bbox?t.bbox:Array.isArray(t)&&4===t.length?t:I(t))[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}function T(t){var e=[t[0],t[1]],r=[t[0],t[3]],n=[t[2],t[3]];return{type:"Feature",bbox:t,properties:{},geometry:{type:"Polygon",coordinates:[[e,[t[2],t[1]],n,r,e]]}}}function I(t){var e=[1/0,1/0,-1/0,-1/0];return X(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}function F(t){if(!t)throw new Error("obj is required");var e=A(t);if(e.length>1&&S(e[0])&&S(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function A(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return z(e),e;throw new Error("No valid coordinates")}function z(t){if(t.length>1&&S(t[0])&&S(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return z(t[0]);throw new Error("coordinates must only contain numbers")}function D(t,e){if(!t)throw new Error((e||"geojson")+" is required");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||"geojson")+" is invalid")}function J(t,e,r){if(!B(r=r||{}))throw new Error("options is invalid");var n=r.units,i=F(t),o=F(e),a=O(o[1]-i[1]),s=O(o[0]-i[0]),u=O(i[1]),l=O(o[1]),c=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(u)*Math.cos(l);return function(t,e){if(null==t)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=M[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t*r}(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),n)}function q(t){if(!t)throw new Error("geojson is required");var e=[];return k(t,(function(t){!function(t,e){var r=[],n=t.geometry;switch(n.type){case"Polygon":r=A(n);break;case"LineString":r=[A(n)]}r.forEach((function(r){(function(t,e){var r=[];return t.reduce((function(t,n){var i,o,a,s,u,l,c=_([t,n],e);return c.bbox=(o=n,a=(i=t)[0],s=i[1],[a<(u=o[0])?a:u,s<(l=o[1])?s:l,a>u?a:u,s>l?s:l]),r.push(c),n})),r})(r,t.properties).forEach((function(t){t.id=e.length,e.push(t)}))}))}(t,e)})),j(e)}function Z(t,e){var r={},n=[];if("LineString"===t.type&&(t=x(t)),"LineString"===e.type&&(e=x(e)),"Feature"===t.type&&"Feature"===e.type&&"LineString"===t.geometry.type&&"LineString"===e.geometry.type&&2===t.geometry.coordinates.length&&2===e.geometry.coordinates.length){var i=R(t,e);return i&&n.push(i),j(n)}var o=C();return o.load(q(e)),P(q(t),(function(t){P(o.search(t),(function(e){var i=R(t,e);if(i){var o=A(i).join(",");r[o]||(r[o]=!0,n.push(i))}}))})),j(n)}function R(t,e){var r=A(t),n=A(e);if(2!==r.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==n.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=r[0][0],o=r[0][1],a=r[1][0],s=r[1][1],u=n[0][0],l=n[0][1],c=n[1][0],h=n[1][1],f=(h-l)*(a-i)-(c-u)*(s-o);if(0===f)return null;var m=((c-u)*(o-l)-(h-l)*(i-u))/f,d=((a-i)*(o-l)-(s-o)*(i-u))/f;return m>=0&&m<=1&&d>=0&&d<=1?E([i+m*(a-i),o+m*(s-o)]):null}function G(t,e,r){if(!B(r=r||{}))throw new Error("options is invalid");if(!0===r.final)return function(t,e){var r=G(e,t);return(r+180)%360}(t,e);var n=F(t),i=F(e),o=O(n[0]),a=O(i[0]),s=O(n[1]),u=O(i[1]),l=Math.sin(a-o)*Math.cos(u),c=Math.cos(s)*Math.sin(u)-Math.sin(s)*Math.cos(u)*Math.cos(a-o);return Y(Math.atan2(l,c))}function U(t,e,r,n){if(!B(n=n||{}))throw new Error("options is invalid");var i=n.units,o=n.properties,a=F(t),s=O(a[0]),u=O(a[1]),l=O(r),c=function(t,e){if(null==t)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=M[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t/r}(e,i),h=Math.asin(Math.sin(u)*Math.cos(c)+Math.cos(u)*Math.sin(c)*Math.cos(l));return E([Y(s+Math.atan2(Math.sin(l)*Math.sin(c)*Math.cos(u),Math.cos(c)-Math.sin(u)*Math.sin(h))),Y(h)],o)}function Q(t,e){var r=[],n=C();return k(e,(function(e){if(r.forEach((function(t,e){t.id=e})),r.length){var i=n.search(e);if(i.features.length){var o=V(e,i);r=r.filter((function(t){return t.id!==o.id})),n.remove(o),P(W(o,e),(function(t){r.push(t),n.insert(t)}))}}else(r=W(t,e).features).forEach((function(t){var e;t.bbox||(t.bbox=function(t){var e=t[0],r=t[1],n=t[2],i=t[3];if(J(t.slice(0,2),[n,r])>=J(t.slice(0,2),[e,i])){var o=(r+i)/2;return[e,o-(n-e)/2,n,o+(n-e)/2]}var a=(e+n)/2;return[a-(i-r)/2,r,a+(i-r)/2,i]}((e=[1/0,1/0,-1/0,-1/0],X(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e)))})),n.load(j(r))})),j(r)}function W(t,e){var r=[],n=A(t)[0],i=A(t)[t.geometry.coordinates.length-1];if(K(n,F(e))||K(i,F(e)))return j([t]);var o=C(),a=q(t);o.load(a);var s=o.search(e);if(!s.features.length)return j([t]);var u=V(e,s),l=function(t,e,r){var n=r;return P(t,(function(t,i){n=0===i&&void 0===r?t:e(n,t,i)})),n}(a,(function(t,n,i){var o=A(n)[1],a=F(e);return i===u.id?(t.push(a),r.push(_(t)),K(a,o)?[a]:[a,o]):(t.push(o),t)}),[n]);return l.length>1&&r.push(_(l)),j(r)}function V(t,e){if(!e.features.length)throw new Error("lines must contain features");if(1===e.features.length)return e.features[0];var r,n=1/0;return P(e,(function(e){var i=function(t,e,r){if(!B(r=r||{}))throw new Error("options is invalid");var n=t.geometry?t.geometry.type:t.type;if("LineString"!==n&&"MultiLineString"!==n)throw new Error("lines must be LineString or MultiLineString");var i=E([1/0,1/0],{dist:1/0}),o=0;return k(t,(function(t){for(var n=A(t),a=0;a<n.length-1;a++){var s=E(n[a]);s.properties.dist=J(e,s,r);var u=E(n[a+1]);u.properties.dist=J(e,u,r);var l=J(s,u,r),c=Math.max(s.properties.dist,u.properties.dist),h=G(s,u),f=U(e,c,h+90,r),m=U(e,c,h-90,r),d=Z(_([f.geometry.coordinates,m.geometry.coordinates]),_([s.geometry.coordinates,u.geometry.coordinates])),p=null;d.features.length>0&&((p=d.features[0]).properties.dist=J(e,p,r),p.properties.location=o+J(s,p,r)),s.properties.dist<i.properties.dist&&((i=s).properties.index=a,i.properties.location=o),u.properties.dist<i.properties.dist&&((i=u).properties.index=a+1,i.properties.location=o+l),p&&p.properties.dist<i.properties.dist&&((i=p).properties.index=a),o+=l}})),i}(e,t).properties.dist;i<n&&(r=e,n=i)})),r}function K(t,e){return t[0]===e[0]&&t[1]===e[1]}var H={onSetup:function(t){var e=t.spliter,r=this.getSelected().map((function(t){return t.toGeoJSON()}));if(r.length<1)throw new Error("Please select a Linestring/MultiLinestring!");return{main:r,spliter:"passing_mode_".concat(e)}},toDisplayFeatures:function(t,e,r){var i=this;r(e),this.changeMode(t.spliter,(function(e){t.main.forEach((function(t,r){if(t.geometry.type!==n.geojsonTypes.LINE_STRING&&t.geometry.type!==n.geojsonTypes.MULTI_LINE_STRING)throw new Error("The feature is not Linestring/MultiLinestring!");var o=function(t,e){if(!t)throw new Error("line is required");if(!e)throw new Error("splitter is required");var r=D(t),n=D(e);if("LineString"!==r)throw new Error("line must be LineString");if("FeatureCollection"===n)throw new Error("splitter cannot be a FeatureCollection");if("GeometryCollection"===n)throw new Error("splitter cannot be a GeometryCollection");var i=function(t,e){if(!B(e=e||{}))throw new Error("options is invalid");var r=e.precision,n=e.coordinates,i=e.mutate;if(r=null==r||isNaN(r)?6:r,n=null==n||isNaN(n)?3:n,!t)throw new Error("<geojson> is required");if("number"!=typeof r)throw new Error("<precision> must be a number");if("number"!=typeof n)throw new Error("<coordinates> must be a number");!1!==i&&void 0!==i||(t=JSON.parse(JSON.stringify(t)));var o=Math.pow(10,r);return X(t,(function(t){!function(t,e,r){t.length>r&&t.splice(r,t.length);for(var n=0;n<t.length;n++)t[n]=Math.round(t[n]*e)/e}(t,o,n)})),t}(e,{precision:7});switch(n){case"Point":return W(t,i);case"MultiPoint":return Q(t,i);case"LineString":case"MultiLineString":case"Polygon":case"MultiPolygon":return Q(t,Z(t,i))}}(t,e);o.features.length<1||(o.features.forEach((function(t){var e=i.newFeature(t);i.addFeature(e)})),i.deleteFeature([t.id],{silent:!0}))}))}))},onKeyUp:function(t,e){if(27===e.keyCode)return this.exitMode()},exitMode:function(t,e){return this.changeMode(n.modes.SIMPLE_SELECT)}};e.default=H},31:function(t,e,r){},45:function(t,e,r){},46:function(t,e,r){"use strict";r.r(e);var n,i,o,a=r(2),s=r(4),u=r.n(s),l=r(16),c=r.n(l),h=(r(31),r(8)),f=r(25),m=r(17),d=r(18),p=r(10),g=r.n(p),y=r(6),w=(r(44),r(24)),b=r.n(w),v=r(11),M=(r(45),function(){function t(e){Object(m.a)(this,t);var r=this;r.draw=e.draw,r.buttons=e.buttons||[],r.onAddOrig=e.draw.onAdd,r.onRemoveOrig=e.draw.onRemove}return Object(d.a)(t,[{key:"onAdd",value:function(t){var e=this;return e.map=t,e.elContainer=e.onAddOrig(t),e.buttons.forEach((function(t){e.addButton(t)})),e.elContainer}},{key:"onRemove",value:function(t){var e=this;e.buttons.forEach((function(t){e.removeButton(t)})),e.onRemoveOrig(t)}},{key:"addButton",value:function(t){var e=document.createElement("button");e.className="mapbox-gl-draw_ctrl-draw-btn",t.classes instanceof Array&&t.classes.forEach((function(t){e.classList.add(t)})),e.addEventListener(t.on,t.action),this.elContainer.appendChild(e),t.elButton=e}},{key:"removeButton",value:function(t){t.elButton.removeEventListener(t.on,t.action),t.elButton.remove()}}]),t}());var x=function(){var t=Object(s.useState)(!1),e=Object(f.a)(t,2),r=e[0],u=e[1],l=Object(s.useRef)(null),c=function(){u(!0)};"unavailable"===g.a.getRTLTextPluginStatus()&&g.a.setRTLTextPlugin("https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js",(function(t){t&&console.error(t)}),!0),Object(s.useEffect)((function(){n=new g.a.Map({container:l.current||"",style:"https://map.ir/vector/styles/main/mapir-xyz-light-style.json",center:[51.3857,35.6102],zoom:10,pitch:0,interactive:!0,hash:!0,attributionControl:!0,customAttribution:"\xa9 Map \xa9 Openstreetmap",transformRequest:function(t){return{url:t,headers:{"x-api-key":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImRiZWU0YWU4OTk4OTA3MmQ3OTFmMjQ4ZDE5N2VhZTgwZWU2NTUyYjhlYjczOWI2NDdlY2YyYzIzNWRiYThiMzIzOTM5MDkzZDM0NTY2MmU3In0.eyJhdWQiOiI5NDMyIiwianRpIjoiZGJlZTRhZTg5OTg5MDcyZDc5MWYyNDhkMTk3ZWFlODBlZTY1NTJiOGViNzM5YjY0N2VjZjJjMjM1ZGJhOGIzMjM5MzkwOTNkMzQ1NjYyZTciLCJpYXQiOjE1OTA4MjU0NzIsIm5iZiI6MTU5MDgyNTQ3MiwiZXhwIjoxNTkzNDE3NDcyLCJzdWIiOiIiLCJzY29wZXMiOlsiYmFzaWMiXX0.M_z4xJlJRuYrh8RFe9UrW89Y_XBzpPth4yk3hlT-goBm8o3x8DGCrSqgskFfmJTUD2wC2qSoVZzQKB67sm-swtD5fkxZO7C0lBCMAU92IYZwCdYehIOtZbP5L1Lfg3C6pxd0r7gQOdzcAZj9TStnKBQPK3jSvzkiHIQhb6I0sViOS_8JceSNs9ZlVelQ3gs77xM2ksWDM6vmqIndzsS-5hUd-9qdRDTLHnhdbS4_UBwNDza47Iqd5vZkBgmQ_oDZ7dVyBuMHiQFg28V6zhtsf3fijP0UhePCj4GM89g3tzYBOmuapVBobbX395FWpnNC3bYg7zDaVHcllSUYDjGc1A","Mapir-SDK":"reactjs"}}}}),i=new y.a({modes:Object(h.a)(Object(h.a)({},y.a.modes),{},{splitLineMode:b.a,passing_mode_point:Object(v.a)(y.a.modes.draw_point),passing_mode_line_string:Object(v.a)(y.a.modes.draw_line_string),passing_mode_polygon:Object(v.a)(y.a.modes.draw_polygon)}),userProperties:!0}),o=new M({draw:i,buttons:[{on:"click",action:c,classes:["split-icon"]}]}),n.once("load",(function(){n.resize(),n.addControl(o,"top-right"),i.set({type:"FeatureCollection",features:[{id:"example_id",type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[[51.46717071533203,35.752642192392955],[51.41704559326172,35.7715862712587],[51.37207031249999,35.73954585450408],[51.31988525390625,35.753756674845675],[51.29344940185547,35.713904233681035],[51.37035369873047,35.67012719291238],[51.32434844970703,35.633581468816594]]}}]})}))}),[]);var m=function(t){try{var e;null===(e=i)||void 0===e||e.changeMode("splitLineMode",{spliter:t})}catch(r){alert(r.message),console.error(r)}};return Object(a.jsxs)("div",{className:"map-wrapper",children:[Object(a.jsx)("div",{id:"map",ref:l}),r?Object(a.jsxs)("div",{className:"mapboxgl-ctrl-group mapboxgl-ctrl split",children:[Object(a.jsx)("button",{className:"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_line",onClick:function(){m("line_string"),u(!1)}}),Object(a.jsx)("button",{className:"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_point",onClick:function(){m("point"),u(!1)}}),Object(a.jsx)("button",{className:"mapbox-gl-draw_ctrl-draw-btn mapbox-gl-draw_polygon",onClick:function(){m("polygon"),u(!1)}})]}):null]})},E=function(t){t&&t instanceof Function&&r.e(3).then(r.bind(null,47)).then((function(e){var r=e.getCLS,n=e.getFID,i=e.getFCP,o=e.getLCP,a=e.getTTFB;r(t),n(t),i(t),o(t),a(t)}))};c.a.render(Object(a.jsx)(u.a.StrictMode,{children:Object(a.jsx)(x,{})}),document.getElementById("root")),E()}},[[46,1,2]]]);
//# sourceMappingURL=main.1413f682.chunk.js.map